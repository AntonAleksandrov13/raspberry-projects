- include_tasks: tasks/update.yaml
- include_tasks: tasks/upgrade.yaml

- name: Disable swap #because of https://github.com/kubernetes/kubernetes/issues/53533
  become: yes
  shell: swapoff -a

- name: Create /etc/modules-load.d/containerd.conf
  become: yes
  ansible.builtin.copy:
    dest: /etc/modules-load.d/containerd.conf
    content: |
      overlay
      br_netfilter

- name: Load overlay kernel module
  become: yes
  command: modprobe overlay

- name: Load br_netfilter kernel module
  become: yes
  command: modprobe br_netfilter

- name: Create /etc/sysctl.d/99-kubernetes-k8s.conf
  become: yes
  ansible.builtin.copy:
    dest: /etc/sysctl.d/99-kubernetes-k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
      net.bridge.bridge-nf-call-ip6tables = 1

#for now will be using cgroup v1 based on https://gjhenrique.com/cgroups-k8s/
- name: Ensure cgroup_enable parameters are present in /boot/firmware/cmdline.txt
  ansible.builtin.shell: |
    if ! grep -q 'cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory systemd.unified_cgroup_hierarchy=0' /boot/firmware/cmdline.txt; then
      sed -i 's/$/ cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory systemd.unified_cgroup_hierarchy=0/' /boot/firmware/cmdline.txt
    fi
  become: true

- name: Apply kernel parameters
  become: yes
  command: sysctl --system

- name: Install containerd
  become: yes
  apt:
    name: containerd

- name: Generate containerd config
  become: yes
  command: containerd config default > /etc/containerd/config.toml

- name: Add SystemdCgroup to /etc/containerd/config.toml
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    insertafter: '^[plugins\."io\.containerd\.grpc\.v1\.cri"\.containerd\.runtimes\.runc\.options]$'
    line: '    SystemdCgroup = true'
    state: present
    backup: true

- name: Enable containerd service
  become: yes
  ansible.builtin.systemd:
    name: containerd
    enabled: true

- name: Restart containerd service
  become: yes
  ansible.builtin.systemd:
    name: containerd
    state: restarted

- name: Install apt-transport-https
  become: yes
  apt:
    name: apt-transport-https

- name: Install ca-certificates
  become: yes
  apt:
    name: ca-certificates

- name: Install curl
  become: yes
  apt:
    name: curl

- name: Install gpg
  become: yes
  apt:
    name: gpg

- name: Ensure Kubernetes repository key is installed
  become: true
  ansible.builtin.shell: |
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg # Prevents re-execution if the file already exists

- name: Add Kubernetes repository to APT sources
  become: true
  ansible.builtin.shell: |
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list
  args:
    creates: /etc/apt/sources.list.d/kubernetes.list # Prevents re-execution if the file already exists

- include_tasks: tasks/update.yaml

- name: Install kubelet
  become: yes
  apt:
    name: kubelet

- name: Install kubeadm
  become: yes
  apt:
    name: kubeadm

- name: Install kubectl
  become: yes
  apt:
    name: kubectl

- name: Hold kubelet, kubeadm, and kubectl packages #prevent accidental upgrades/deletes
  become: true
  ansible.builtin.shell: |
    apt-mark hold kubelet kubeadm kubectl
